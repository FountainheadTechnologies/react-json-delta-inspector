// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NodeRenderer renders each item in the object 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    data={
      DeletedValue {
        "prevVal": "string",
      }
    }
    depth={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ObjectLabel
        data={
          DeletedValue {
            "prevVal": "string",
          }
        }
        isNonenumerable={false}
      />,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "data": DeletedValue {
          "prevVal": "string",
        },
        "isNonenumerable": false,
        "name": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ObjectLabel
          data={
            DeletedValue {
              "prevVal": "string",
            }
          }
          isNonenumerable={false}
        />,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "data": DeletedValue {
            "prevVal": "string",
          },
          "isNonenumerable": false,
          "name": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`NodeRenderer renders each item in the object 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    data={
      AddedValue {
        "val": 10,
      }
    }
    depth={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ObjectLabel
        data={
          AddedValue {
            "val": 10,
          }
        }
        isNonenumerable={false}
      />,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "data": AddedValue {
          "val": 10,
        },
        "isNonenumerable": false,
        "name": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ObjectLabel
          data={
            AddedValue {
              "val": 10,
            }
          }
          isNonenumerable={false}
        />,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "data": AddedValue {
            "val": 10,
          },
          "isNonenumerable": false,
          "name": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`NodeRenderer renders each item in the object 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    data={
      Array [
        "zero",
        "one",
        ChangedValue {
          "newVal": "two",
          "prevVal": "too",
        },
      ]
    }
    depth={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ObjectLabel
        data={
          Array [
            "zero",
            "one",
            ChangedValue {
              "newVal": "two",
              "prevVal": "too",
            },
          ]
        }
        isNonenumerable={false}
      />,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "data": Array [
          "zero",
          "one",
          ChangedValue {
            "newVal": "two",
            "prevVal": "too",
          },
        ],
        "isNonenumerable": false,
        "name": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ObjectLabel
          data={
            Array [
              "zero",
              "one",
              ChangedValue {
                "newVal": "two",
                "prevVal": "too",
              },
            ]
          }
          isNonenumerable={false}
        />,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "data": Array [
            "zero",
            "one",
            ChangedValue {
              "newVal": "two",
              "prevVal": "too",
            },
          ],
          "isNonenumerable": false,
          "name": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`NodeRenderer renders the root object 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    data={
      Object {
        "addedNumber": AddedValue {
          "val": 10,
        },
        "array": Array [
          "zero",
          "one",
          ChangedValue {
            "newVal": "two",
            "prevVal": "too",
          },
        ],
        "deletedString": DeletedValue {
          "prevVal": "string",
        },
      }
    }
    depth={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "data": Object {
        "addedNumber": AddedValue {
          "val": 10,
        },
        "array": Array [
          "zero",
          "one",
          ChangedValue {
            "newVal": "two",
            "prevVal": "too",
          },
        ],
        "deletedString": DeletedValue {
          "prevVal": "string",
        },
      },
      "name": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "data": Object {
          "addedNumber": AddedValue {
            "val": 10,
          },
          "array": Array [
            "zero",
            "one",
            ChangedValue {
              "newVal": "two",
              "prevVal": "too",
            },
          ],
          "deletedString": DeletedValue {
            "prevVal": "string",
          },
        },
        "name": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
